{"version":3,"sources":["webpack:///./src/pages/events.js"],"names":["compose","withLayout","withFadeIn","events","data","seo","eventListToSEO","edges","map","edge","node","Title","__primary","Content","e","Item","key","id","onClick","to","moment","dateTime","calendar","name","location","trim","local_city","query"],"mappings":"yRAoCeA,sBACbC,IACAC,IAFaF,EAvBF,SAAC,GAAD,IAAWG,EAAX,EAAGC,KAAQD,OAAX,OACX,kBAAC,OAAD,KACE,kBAAC,IAAD,CAAKE,IAAKC,YAAeH,EAAOI,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,WACvD,kBAAC,IAAD,KACE,kBAAC,IAAKC,MAAN,CAAYC,WAAS,GACnB,2CAEF,kBAAC,IAAKC,QAAN,KACEV,EAAOI,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAMF,KAAI,SAAAM,GAAC,OACzC,kBAAC,IAAKC,KAAN,CAAWC,IAAKF,EAAEG,GAAIC,QAAS,cAC7B,kBAAC,IAAD,CAAMC,GAAE,WAAaL,EAAEG,IACrB,kBAAC,IAAD,MAAgB,IACfG,EAAON,EAAEO,UAAUC,WAAY,IAChC,2BAAKR,EAAES,MAAW,IAClB,8BAAQT,EAAEU,SAASC,QAAUX,EAAEY,uBAcpC,IAAMC,EAAK","file":"component---src-pages-events-js-3a21d7089d89e240c83c.js","sourcesContent":["import React from 'react';\nimport * as moment from 'moment';\nimport { compose } from 'recompose';\nimport { graphql } from 'gatsby';\nimport { Grid } from 'react-flexbox-grid';\nimport { GoGitCommit } from 'react-icons/go';\n\nimport Link from '../elements/Link';\nimport SEO, { eventListToSEO } from '../components/SEO';\nimport Card from '../blocks/Card';\nimport { withLayout } from '../layouts';\nimport { withFadeIn } from '../components/FadeIn';\n\nconst View = ({ data: { events } }) => (\n  <Grid>\n    <SEO seo={eventListToSEO(events.edges.map(edge => edge.node))} />\n    <Card>\n      <Card.Title __primary>\n        <h2>All Events</h2>\n      </Card.Title>\n      <Card.Content>\n      { events.edges.map(edge => edge.node).map(e => (\n        <Card.Item key={e.id} onClick={() => {}}>\n          <Link to={`/events/${e.id}`}>\n            <GoGitCommit />{' '}\n            {moment(e.dateTime).calendar()}{' '}\n            <b>{ e.name }</b>{' '}\n            <span>{ e.location.trim() || e.local_city }</span>\n          </Link>\n        </Card.Item>\n      ))}\n      </Card.Content>\n    </Card>\n  </Grid>\n)\n\nexport default compose(\n  withLayout,\n  withFadeIn,\n)(View);\n\nexport const query = graphql`\n  query EventsQuery {\n    events: allTgmeetupEvent(sort: { fields: dateTime }) {\n      edges {\n        node {\n          id\n          dateTime\n          name\n          location\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}