{"version":3,"sources":["webpack:///../node_modules/moment/locale/br.js"],"names":["moment","relativeTimeWithMutation","number","withoutSuffix","key","text","mutationTable","undefined","charAt","substring","softMutation","mutation","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","lastNumber","dayOfMonthOrdinalParse","ordinal","week","dow","doy","factory"],"mappings":"+EAAA,EAAQ,QAOC,SAAUA,GACjB,aAEA,SAASC,EAAyBC,EAAQC,EAAeC,GAMvD,OAAOF,EAAS,IAyBlB,SAAkBG,EAAMH,GACtB,OAAe,IAAXA,EAON,SAAsBG,GACpB,IAAIC,EAAgB,CAClB,EAAK,IACL,EAAK,IACL,EAAK,KAGP,YAAsCC,IAAlCD,EAAcD,EAAKG,OAAO,IACrBH,EAGFC,EAAcD,EAAKG,OAAO,IAAMH,EAAKI,UAAU,GAjB7CC,CAAaL,GAGfA,EA9BeM,CALT,CACX,GAAM,WACN,GAAM,MACN,GAAM,UAE8BP,GAAMF,GA+CrCF,EAAOY,aAAa,KAAM,CACjCC,OAAQ,gFAAiFC,MAAM,KAC/FC,YAAa,mDAAoDD,MAAM,KACvEE,SAAU,6CAA8CF,MAAM,KAC9DG,cAAe,8BAA8BH,MAAM,KACnDI,YAAa,wBAAwBJ,MAAM,KAC3CK,oBAAoB,EACpBC,eAAgB,CACdC,GAAI,WACJC,IAAK,cACLC,EAAG,aACHC,GAAI,sBACJC,IAAK,+BACLC,KAAM,sCAERC,SAAU,CACRC,QAAS,gBACTC,QAAS,qBACTC,SAAU,eACVC,QAAS,gBACTC,SAAU,qBACVC,SAAU,KAEZC,aAAc,CACZC,OAAQ,YACRC,KAAM,SACNC,EAAG,wBACHC,GAAI,YACJC,EAAG,cACHC,GAAIvC,EACJwC,EAAG,SACHC,GAAI,SACJC,EAAG,YACHC,GAAI3C,EACJ4C,EAAG,SACHC,GAAI7C,EACJ8C,EAAG,WACHC,GAjFJ,SAAiC9C,GAC/B,OAaF,SAAS+C,EAAW/C,GAClB,OAAIA,EAAS,EACJ+C,EAAW/C,EAAS,IAGtBA,EAlBC+C,CAAW/C,IACjB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACH,OAAOA,EAAS,SAElB,QACE,OAAOA,EAAS,YAyEpBgD,uBAAwB,kBACxBC,QAAS,SAAiBjD,GAExB,OAAOA,GADiB,IAAXA,EAAe,KAAO,QAGrCkD,KAAM,CACJC,IAAK,EAELC,IAAK,KAxGuFC,CAAQ,EAAQ","file":"16-957100f71836721be744.js","sourcesContent":["require(\"core-js/modules/es6.regexp.split\");\n\n//! moment.js locale configuration\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' && typeof require === 'function' ? factory(require('../moment')) : typeof define === 'function' && define.amd ? define(['../moment'], factory) : factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  function relativeTimeWithMutation(number, withoutSuffix, key) {\n    var format = {\n      'mm': 'munutenn',\n      'MM': 'miz',\n      'dd': 'devezh'\n    };\n    return number + ' ' + mutation(format[key], number);\n  }\n\n  function specialMutationForYears(number) {\n    switch (lastNumber(number)) {\n      case 1:\n      case 3:\n      case 4:\n      case 5:\n      case 9:\n        return number + ' bloaz';\n\n      default:\n        return number + ' vloaz';\n    }\n  }\n\n  function lastNumber(number) {\n    if (number > 9) {\n      return lastNumber(number % 10);\n    }\n\n    return number;\n  }\n\n  function mutation(text, number) {\n    if (number === 2) {\n      return softMutation(text);\n    }\n\n    return text;\n  }\n\n  function softMutation(text) {\n    var mutationTable = {\n      'm': 'v',\n      'b': 'v',\n      'd': 'z'\n    };\n\n    if (mutationTable[text.charAt(0)] === undefined) {\n      return text;\n    }\n\n    return mutationTable[text.charAt(0)] + text.substring(1);\n  }\n\n  var br = moment.defineLocale('br', {\n    months: 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n    monthsShort: 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n    weekdays: 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n    weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n    weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'h[e]mm A',\n      LTS: 'h[e]mm:ss A',\n      L: 'DD/MM/YYYY',\n      LL: 'D [a viz] MMMM YYYY',\n      LLL: 'D [a viz] MMMM YYYY h[e]mm A',\n      LLLL: 'dddd, D [a viz] MMMM YYYY h[e]mm A'\n    },\n    calendar: {\n      sameDay: '[Hiziv da] LT',\n      nextDay: '[Warc\\'hoazh da] LT',\n      nextWeek: 'dddd [da] LT',\n      lastDay: '[Dec\\'h da] LT',\n      lastWeek: 'dddd [paset da] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'a-benn %s',\n      past: '%s \\'zo',\n      s: 'un nebeud segondennoù',\n      ss: '%d eilenn',\n      m: 'ur vunutenn',\n      mm: relativeTimeWithMutation,\n      h: 'un eur',\n      hh: '%d eur',\n      d: 'un devezh',\n      dd: relativeTimeWithMutation,\n      M: 'ur miz',\n      MM: relativeTimeWithMutation,\n      y: 'ur bloaz',\n      yy: specialMutationForYears\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n    ordinal: function ordinal(number) {\n      var output = number === 1 ? 'añ' : 'vet';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n  return br;\n});"],"sourceRoot":""}